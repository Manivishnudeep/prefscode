/*
Nagesh has given two words to check whether the first word 'source' is a
sub-series of second word 'target'.

A sub-series from a word can be formed by removing 0 or more characters without 
changing the relative order of other characters in the word.

For example, 'nest' is a subseries of a word 'interst' , where as 'rest' is not.

Help Nagesh to return true if source is a subseries of target, otherwise false.

Constraints:
 0 <= source.length <= 100
 0 <= target.length <= 10^4
 source and target consist only of lowercase English letters.

Input Format:
-------------
Line-1:Two space separeted strings

 
Output Format:
--------------
Print a boolean result.
 
 
Sample Input-1:
---------------
pqsv pqrstuv
 
Sample Output-1:
----------------
true

Sample Input-2:
---------------
psr pqrst

Sample Output-2:
----------------
false

*/
#include<bits/stdc++.h>
using namespace std;

int solve(string s1,string s2,int m,int n,unordered_map<string,int> dp){
    if(m==0 || n==0){
       return 0;
    }
    string key=to_string(m)+"|"+to_string(n);
    if(dp.find(key)==dp.end()){
        if(s1[m-1]==s2[n-1]){
            dp[key]=solve(s1,s2,m-1,n-1,dp)+1;
        }
        else{
           dp[key]=max(solve(s1,s2,m,n-1,dp),solve(s1,s2,m-1,n,dp)); 
        }
    }
    return dp[key];
}



int main(){
    string source,target;
    cin>>target>>source;
    int b=source.length();
    int a=target.length();
    unordered_map<string,int> dp;
    int len=solve(target,source,a,b,dp);
    //cout<<len;
    if(len==a){
        cout<<"true";
    }
    else{
        cout<<"false";
    }
}